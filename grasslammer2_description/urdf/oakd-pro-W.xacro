<?xml version="1.0" ?>

<!--  xacro macros for oakd mount -->
<robot name="oakd" xmlns:xacro="http://ros.org/wiki/xacro">
      <xacro:include filename="$(find grasslammer2_description)/urdf/inertials.xacro" />
      <xacro:macro name="oakd_link" params="mount_point">
      <xacro:property name="oakd_length" value="0.0803" />
      <xacro:property name="oakd_width" value="0.0957" />
      <xacro:property name="oakd_depth" value="0.1267" />
      <xacro:property name="oakd_mass" value="0.15" />

      <link name="oakd_${mount_point}">
             <!-- <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose> -->
          <visual>
              <origin rpy="0 0 0" xyz="0 0 0" />
              <geometry>
                      <mesh filename="$(find grasslammer2_description)/meshes/OAK-D_pro.dae"/>
              </geometry>
               <material name="black" />
          </visual>
          <collision>
              <origin rpy="0 0 0" xyz="0 0 0" />
              <geometry>
                  <box size="${oakd_length} ${oakd_width} ${oakd_depth}"/>
              </geometry>
          </collision>
          <xacro:inertial_box mass="${oakd_mass}" x="${oakd_length}" y="${oakd_width}" z="${oakd_depth}">
              <origin xyz="0.0 0 0.0" rpy="0 0 0"/>
          </xacro:inertial_box>
      </link>
      
      <!-- Add dummy joint for camera_optical_frame to link back to base_link -->

      <joint name="camera_optical_joint" type="fixed">
      <!-- Point cloud frustrum is 90 degrees off from visual frame --> 
           <!-- <origin rpy="-1.57079632769 0 -1.570796332769" xyz="0 0 0" /> -->
           <origin rpy="0.0 0 0.0" xyz="0 0 0" />
	   <parent link="oakd_${mount_point}" />
	   <child link="camera_optical_frame" />
	</joint> 

	<!-- Add dummy link for camera_optical_frame to link back to base_link -->
        <link name="camera_optical_frame">
        <inertial>
	  <mass value="0.001" />
	  <origin xyz="0 0 0" />
	  <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" />
          </inertial>
  </link>

  <!-- Dummy joints for rgb camera to link back to base_link --> 
        <joint name="camera_rgb_optical_joint" type="fixed">
           <origin rpy="0 0 0" xyz="0 0 0" />
	   <parent link="oakd_${mount_point}" />
	   <child link="camera_rgb_optical_frame" />
	</joint> 

	<!-- Add dummy link for camera_optical_frame to link back to base_link -->
        <link name="camera_rgb_optical_frame">
        <inertial>
	  <mass value="0.001" />
	  <origin xyz="0 0 0" />
	  <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001" />
          </inertial>
  </link>

  <!-- Gazebo plugin for greyscale left/right stereo pairs -->

  <gazebo reference="camera_optical_frame"><!-- oakd_${mount_point}" -->
    <material>Gazebo/Grey3</material>
    <sensor type="multicamera" name="stereo_camera">
      <update_rate>30.0</update_rate>
      <camera name="left">
        <pose>0 -0.035 0 0 0 0</pose>
        <horizontal_fov>2.21</horizontal_fov>  <!--127Â°-->
        <image>
          <width>1280</width>
          <height>800</height>
	        <format>R8G8B8</format> 
        </image>
        <clip>
          <near>0.03</near>
          <far>35</far>
        </clip>
        <!-- <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise> -->
      </camera>
      <camera name="right">
        <pose>0 0.035 0 0 0 0</pose>
        <horizontal_fov>2.21</horizontal_fov>
        <image>
          <width>1280</width>
          <height>800</height>
	        <format>R8G8B8</format> 
        </image>
        <clip>
          <near>0.03</near>
          <far>35</far>
        </clip>
        <!-- <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise> -->
      </camera>
      <plugin name="stereo_camera_controller" filename="libgazebo_ros_camera.so">
        <camera_name></camera_name>
        <frame_name>camera_optical_frame</frame_name>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <ros>
          <namespace></namespace>
           <remapping>stereo_camera/left/image_raw:=/left/image_raw</remapping>
          <remapping>stereo_camera/right/image_raw:=/right/image_raw</remapping>
          <remapping>stereo_camera/left/camera_info:=/left/camera_info</remapping>
          <remapping>stereo_camera/right/camera_info:=/right/camera_info</remapping>
        </ros>
        
      </plugin>
    </sensor>
  </gazebo> 

 <!-- Gazebo plugin for center RGB camera -->

   <gazebo reference="oakd_${mount_point}">
      <material>Gazebo/Black</material>
      <sensor type="camera" name="oakd_rgb_${mount_point}">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.21</horizontal_fov>
        <image>
          <width>1280</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.03</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <camera_name>rgb_camera</camera_name>
        <frame_name>camera_rgb_optical_frame</frame_name>
        <ros>
          <namespace>rgb_camera</namespace>
          
        </ros>
      </plugin>
    </sensor>
  </gazebo>

      <gazebo reference="oakd_joint_${mount_point}">
          <!-- <disableFixedJointLumping>true</disableFixedJointLumping>  -->
          <!-- <preserveFixedJoint>true</preserveFixedJoint> -->
      </gazebo>
    </xacro:macro>

    <xacro:macro name="oakd_joint" params="x y z roll pitch yaw mount_point" >
        <joint name="oakd_joint_${mount_point}" type="fixed">
                <origin rpy="${roll} ${pitch} ${yaw}" xyz="${x}+0.1 ${y}-0.01 ${z}"/>
            <parent link="base_link" />
            <child link="oakd_${mount_point}" />
        </joint>

        <gazebo reference="oakd_joint_${mount_point}">
            <preserveFixedJoint>true</preserveFixedJoint>
        </gazebo>
    </xacro:macro>
</robot>
